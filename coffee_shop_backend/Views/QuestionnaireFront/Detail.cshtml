@model QuestionDetailViewModel
@{
    string fileFolder = $"/wwwroot/";
    string optionalItemText = "(選填)";
}

@using (Html.BeginForm("Form", "QuestionnaireFront", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div>@Model.HeadText</div>

    @if (Model != null && Model.Questions != null)
    {
        foreach (var item in Model.Questions)
        {
            switch (item.FieldType)
            {
                case AnswerTypeEnum.Email:
                case AnswerTypeEnum.SingleLine:
                case AnswerTypeEnum.Identity:
                    <div class="formsItem">
                        <label for="@item.ID" class="col-form-label formsLabel">
                            @item.FieldName
                            @if (item.IsRequired)
                            {
                                <abbr title="必填欄位" class="text-nowrap ms-1">必填</abbr>
                            }
                            else
                            {
                                <abbr class="text-nowrap ms-1 text-primary_d3">@optionalItemText</abbr>
                            }
                        </label>
                        <div class="form-group">
                            <div class="row g-2">
                                <div class="col-md-10">
                                    <input id="@item.ID" name="@item.ID" class="form-control" type="text" placeholder="@("請輸入" + item.FieldName + (item.IsRequired ? "(必填)" : ""))" @(item.WordLimit == 0 ? "" : "maxlength=" + item.WordLimit + "") value="@item.Value">
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(item.Note))
                            {
                                <small class="d-block text-info mt-2">@item.Note</small>
                            }

                            @if (Model.ValidResults.ContainsKey(item.ID.ToString()))
                            {
                                <div class="invalid-feedback" style="display: block;" asp-validation-for="@item.ID">@Model.ValidResults[item.ID.ToString()]</div>
                            }
                        </div>
                    </div>
                    break;
                case AnswerTypeEnum.MultiLine:
                    <div class="formsItem clearfix">
                        <label for="@item.ID" class="col-form-label formsLabel">
                            @item.FieldName
                            @if (item.IsRequired)
                            {
                                <abbr title="必填欄位" class="text-nowrap ms-1">必填</abbr>
                            }
                            else
                            {
                                <abbr class="text-nowrap ms-1 text-primary_d3">@optionalItemText</abbr>
                            }
                        </label>
                        <div class="formsGroup">
                            <div class="row g-2">
                                <div class="col col-lg-10">
                                    <textarea class="form-control" id="@item.ID" name="@item.ID" rows="@item.RowLimit" placeholder="@("請輸入" + item.FieldName + (item.IsRequired ? "(必填)" : ""))">@item.Value</textarea>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(item.Note))
                            {
                                <small class="d-block text-info mt-2">@item.Note</small>
                            }

                            @if (Model.ValidResults.ContainsKey(item.ID.ToString()))
                            {
                                <div class="invalid-feedback" style="display: block;" asp-validation-for="@item.ID">@Model.ValidResults[item.ID.ToString()]</div>
                            }
                        </div>
                    </div>
                    break;
                case AnswerTypeEnum.SingleChoice:
                    <fieldset class="formsItem clearfix">
                        <legend class="col-form-label formsLabel">
                            @item.FieldName
                            @if (item.IsRequired)
                            {
                                <abbr title="必填欄位" class="text-nowrap ms-1">必填</abbr>
                            }
                            else
                            {
                                <abbr class="text-nowrap ms-1 text-primary_d3">@optionalItemText</abbr>
                            }
                        </legend>
                        <div class="formsGroup">
                            <div class="row g-2">
                                <div class="col-xl-11">
                                    @foreach (var option in item.Options.OrderBy(x => x.Sort))
                                    {
                                        <div class="d-inline-flex align-items-center">
                                            <div class="col-auto form-check form-check-inline">
                                                <input type="radio" id="@option.ID" name="@item.ID" class="form-check-input" value="@option.ID" @(item.Value == option.ID.ToString() ? "checked='checked'" : "")>
                                                <label class="form-check-label" for="@option.ID">@option.OptionName</label>
                                            </div>
                                            @if (option.MemoType == MemoTypeEnum.Normal)
                                            {
                                                <div class="d-flex align-items-center">
                                                    <label class="sr-only" for="@(option.ID + "_memo"+option.OptionName)">Example label</label>
                                                    <input type="text" class="form-control" id="@(option.ID + "_memo"+option.OptionName)" name="@(option.ID + "_memo" + option.OptionName)" value="@(item.Value == option.ID.ToString() ? item.MemoValue : "")" placeholder="@optionalItemText" onchange="MemoChange('@option.ID')">
                                                </div>
                                            }
                                            else if (option.MemoType == MemoTypeEnum.Required)
                                            {
                                                <div class="d-flex align-items-center">
                                                    <label class="sr-only" for="@(option.ID + "_memo"+option.OptionName)">Example label</label>
                                                    <input type="text" class="form-control" id="@(option.ID + "_memo"+option.OptionName)" name="@(option.ID + "_memo" + option.OptionName)" value="@(item.Value == option.ID.ToString() ? item.MemoValue : "")" placeholder="必填" onchange="MemoChange('@option.ID')">
                                                </div>
                                            }
                                        </div>
                                        if (Model.ValidResults.ContainsKey(option.ID + "_memo" + option.OptionName))
                                        {
                                            <div class="invalid-feedback" style="display: block;" asp-validation-for="@item.ID">@Model.ValidResults[option.ID + "_memo" + option.OptionName]</div>
                                        }
                                    }
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(item.Note))
                            {
                                <small class="d-block text-info mt-2">@item.Note</small>
                            }

                            @if (Model.ValidResults.ContainsKey(item.ID.ToString()))
                            {
                                <div class="invalid-feedback" style="display: block;" asp-validation-for="@item.ID">@Model.ValidResults[item.ID.ToString()]</div>
                            }
                        </div>
                    </fieldset>
                    break;
                case AnswerTypeEnum.MultipleChoice:
                    <fieldset class="formsItem clearfix">
                        <legend class="col-form-label formsLabel">
                            @item.FieldName
                            @if (item.IsRequired)
                            {
                                <abbr title="必填欄位" class="text-nowrap ms-1">必填</abbr>
                            }
                            else
                            {
                                <abbr class="text-nowrap ms-1 text-primary_d3">@optionalItemText</abbr>
                            }
                        </legend>
                        <div class="formsGroup">
                            <div class="row g-2">
                                <div class="col-xl-11">
                                    @foreach (var option in item.Options.OrderBy(x => x.Sort))
                                    {
                                        <div class="d-inline-flex align-items-center">
                                            <div class="col-auto form-check form-check-inline">
                                                <input type="checkbox" id="@option.ID" name="@item.ID" class="form-check-input" value="@option.ID" @(!string.IsNullOrWhiteSpace(item.Value) && item.Value.Contains(option.ID.ToString()) ? "checked='checked'" : "")>
                                                <label class="form-check-label" for="@option.ID">@option.OptionName</label>
                                            </div>
                                            @if (option.MemoType == MemoTypeEnum.Normal)
                                            {
                                                <div class="d-flex align-items-center">
                                                    <label class="sr-only" for="@(option.ID + "_memo"+option.OptionName)">Example label</label>
                                                    <input type="text" class="form-control" id="@(option.ID + "_memo"+option.OptionName)" name="@(option.ID + "_memo"+option.OptionName)" value="@(item.Value == option.ID.ToString() ? item.MemoValue : "")" placeholder="@optionalItemText" onchange="MemoChange('@option.ID')">
                                                </div>
                                            }
                                            else if (option.MemoType == MemoTypeEnum.Required)
                                            {
                                                <div class="d-flex align-items-center">
                                                    <label class="sr-only" for="@(option.ID + "_memo"+option.OptionName)">Example label</label>
                                                    <input type="text" class="form-control" id="@(option.ID + "_memo"+option.OptionName)" name="@(option.ID + "_memo"+option.OptionName)" value="@(item.Value == option.ID.ToString() ? item.MemoValue : "")" placeholder="必填" onchange="MemoChange('@option.ID')">
                                                </div>
                                            }
                                        </div>
                                        if (Model.ValidResults.ContainsKey(option.ID + "_memo" + option.OptionName))
                                        {
                                            <div class="invalid-feedback" style="display: block;" asp-validation-for="@item.ID">@Model.ValidResults[option.ID + "_memo" + option.OptionName]</div>
                                        }
                                    }
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(item.Note))
                            {
                                <small class="d-block text-info mt-2">@item.Note</small>
                            }

                            @if (Model.ValidResults.ContainsKey(item.ID.ToString()))
                            {
                                <div class="invalid-feedback" style="display: block;" asp-validation-for="@item.ID">@Model.ValidResults[item.ID.ToString()]</div>
                            }
                        </div>
                    </fieldset>
                    break;
                case AnswerTypeEnum.DropDownList:

                    <div class="formsItem clearfix">
                        <label for="@item.ID" class="col-form-label formsLabel">
                            @item.FieldName
                            @if (item.IsRequired)
                            {
                                <abbr title="必填欄位" class="text-nowrap ms-1">必填</abbr>
                            }
                            else
                            {
                                <abbr class="text-nowrap ms-1 text-primary_d3">@optionalItemText</abbr>
                            }
                        </label>
                        <div class="formsGroup">
                            <div class="row g-2">
                                <div class="col-md-8">
                                    <select class="form-select" id="@item.ID" name="@item.ID">
                                        <option value="">請選擇</option>
                                        @foreach (var option in item.Options.OrderBy(x => x.Sort))
                                        {
                                           // <option value="@option.ID" @(item.Value == option.ID.ToString() ? "selected='selected'" : "")>@option.OptionName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(item.Note))
                            {
                                <small class="d-block text-info mt-2">@item.Note</small>
                            }

                            @if (Model.ValidResults.ContainsKey(item.ID.ToString()))
                            {
                                <div class="invalid-feedback" style="display: block;" asp-validation-for="@item.ID">@Model.ValidResults[item.ID.ToString()]</div>
                            }
                        </div>
                    </div>
                    break;
            }
        }
    }

    <div>@Model.FooterText</div>
}
